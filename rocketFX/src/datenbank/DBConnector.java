package datenbank;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DBConnector {
	Connection con;
	DBDef dbDef;
	
	
	public DBConnector(){
		dbDef = new DBDef();
		connectToDB();
		updateDBVersion();
//		int id = insertNewSpiel("gegner", "Rocket", 3);
//		insertNewSatz(id, 1,"Rocket", "Rocket", "3 4 5 6 7 8", "2 3 4 5 6 7");
		//testNewSpiel();
	}
	
	public int insertNewSpiel(String gegner, String sieger, int punkte){
		try {
			  Statement stmt = con.createStatement(); 
			  String sql = "insert into SPIELE (GEGNER,SIEGER,PUNKTE)values('"+gegner+"','"+sieger+"',"+punkte+"); CALL IDENTITY();";
			  ResultSet rs = stmt.executeQuery(sql);  
			  rs.next();
			  int id = rs.getInt(1);
			  System.out.println("ID: "+id);
		      // Resultset schliessen
		      rs.close(); 
		  
		      // Statement schliessen
		      stmt.close(); 
		      con.commit();
		      return id;
			}catch(SQLException e){
				e.printStackTrace();
				return -1;
			}
	}
	
	public void updateSpiel(int id, String sieger, int punkte){
		try {
			  Statement stmt = con.createStatement(); 
			  String sql = "UPDATE SPIELE SET SIEGER = '"+sieger+"', PUNKTE = "+punkte+" WHERE ID = "+id;
			  stmt.executeQuery(sql);  
			  
		      // Statement schliessen
		      stmt.close(); 
		      con.commit();

			}catch(SQLException e){
				e.printStackTrace();
			}
	}
	
	public void insertNewSatz(int spielID,int satzID,String starter, String sieger, String zuegeIch, String zuegeGegner, int punkte){
		try {
			  Statement stmt = con.createStatement(); 
			  String sql = "insert into SAETZE (SPIELID,SATZID,STARTER,SIEGER,ZUEGEICH,ZUEGEGEGNER,PUNKTE)values("+
					  		spielID+","+satzID+",'"+starter+"','"+sieger+"','"+zuegeIch+"','"+zuegeGegner+"',"+punkte+")";
			  stmt.executeQuery(sql);  
			  
		      // Statement schliessen
		      stmt.close(); 
		      con.commit();

			}catch(SQLException e){
				e.printStackTrace();
			}
	}
	
	public ResultSet getAllSpiele(){
		try {
			  Statement stmt = con.createStatement(); 
			  String sql = "select * from SPIELE";
			  ResultSet rs = stmt.executeQuery(sql);  
			  
		      // Statement schliessen
		      stmt.close(); 
		      return rs;

			}catch(SQLException e){
				e.printStackTrace();
				return null;
			}
	}
	
	public ResultSet getSaetzeOfSpiel(String SpielID){
		try {
			  Statement stmt = con.createStatement(); 
			  String sql = "select * from SAETZE where SPIELID = "+SpielID;
			  ResultSet rs = stmt.executeQuery(sql);  
			  
		      // Statement schliessen
		      stmt.close(); 
		      return rs;

			}catch(SQLException e){
				e.printStackTrace();
				return null;
			}
	}
	
//	public void testNewSpiel(){
//		try {
//			  Statement stmt = con.createStatement(); 
////			  String create = "create table TEST(ID integer generated by default as identity (start with 1), test varchar(20))";
////			  ResultSet rs = stmt.executeQuery(create);   
//			  
//			  String sql = "insert into TEST (test)values('hallo'); CALL IDENTITY();";
//			  ResultSet rs = stmt.executeQuery(sql); 
//			  rs.next();
//			  System.out.println(rs.getInt(1));
//		      // Resultset schliessen
//		      rs.close(); 
//		  
//		      // Statement schliessen
//		      stmt.close(); 
//		      con.commit();
//			}catch(SQLException e){
//				e.printStackTrace();
//			}
//	}
	
	void updateDBVersion(){
		// HSQLDB kann kein CREATE OR ALTER TABLE, deshalb erst ueberpruefen ob alle Tabellen da sind und wenn nicht, erzeugen
		try {
		  Statement stmt = con.createStatement(); 
		  // array mit Anzahl noetiger Tabellen
	      boolean[] tablesExist = new boolean[dbDef.tables.length];
		  ResultSet rs = stmt.executeQuery(dbDef.testIfTablesExistStmt);   
	      while ( rs.next() ) {
	    	String tableName = rs.getString("TABLE_NAME");
	    	for(int i = 0; i < dbDef.tables.length;i++){
	    		// wenn Tabelle exisiert, boolean im array true setzen
	    		if(tableName.equals(dbDef.tables[i])){
	    			tablesExist[i] = true;
	    		}
	    	}
	      }
	      // die Tabellen, die es nicht gab, erzeugen
	      for(int i = 0; i < dbDef.tables.length;i++){
	    	  if(!tablesExist[i]){
	    		  stmt.execute(dbDef.tableCreateStatements[i]);
	    	  }
	      }    
	      // Resultset schliessen
	      rs.close(); 
	  
	      // Statement schliessen
	      stmt.close(); 
	      con.commit();
		}catch(SQLException e){
			e.printStackTrace();
		}
	}
	
	void connectToDB(){
		try { 
	      // Treiberklasse laden
	      Class.forName( "org.hsqldb.jdbcDriver" ); 
	    } catch ( ClassNotFoundException e ) { 
	      System.err.println( "Treiberklasse nicht gefunden!" ); 
	      return; 
	    } 
	  
	    con = null; 
	  
	    try{ 
	      con = DriverManager.getConnection(dbDef.url, dbDef.user, dbDef.password); 
	      
	    } catch ( SQLException e ) { 
	      e.printStackTrace(); 
	    } 
//	    finally
//	    { 
//	      if ( dbConn != null ) 
//	      {
//	        try { 
//	            con.close(); 
//	            } catch ( SQLException e ) { 
//	                e.printStackTrace(); 
//	            }
//	      }
//	    } 
	}
}
