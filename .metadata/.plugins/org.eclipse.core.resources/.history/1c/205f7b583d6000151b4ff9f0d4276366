package serverKommunikation;

import com.pusher.client.Pusher;
import com.pusher.client.PusherOptions;
import com.pusher.client.channel.PrivateChannel;
import com.pusher.client.channel.PrivateChannelEventListener;
import com.pusher.client.connection.ConnectionEventListener;
import com.pusher.client.connection.ConnectionStateChange;
import com.pusher.client.util.HttpAuthorizer;

public class PusherTest implements ConnectionEventListener, PrivateChannelEventListener {

	static final String api_key = "31c391e3e11a9b0d551a";
	static final String api_id = "141721";
	static final String api_secret = "9c4d166f1cf91fd27dbc";
	static final String api_channel = "private-channel";
	static final String api_event = "my_event";

	private final Pusher pusher;
	private final PrivateChannel channel;

	public PusherTest() {

		/*
		 * Authorization
		 */
		HttpAuthorizer authorizer = new HttpAuthorizer("http://tgwesthofen.de/test/auth.php?pw=luis");
		PusherOptions opt = new PusherOptions();
		opt.setEncrypted(true);
		opt.setAuthorizer(authorizer);

		/*
		 * Pusher Instance & Connect
		 */
		pusher = new Pusher(api_key, opt);
		pusher.disconnect();
		pusher.connect(this);

		/*
		 * Subscribe to Channel
		 */
		channel = pusher.subscribePrivate(api_channel, new PrivateChannelEventListener() {
			@Override
			public void onAuthenticationFailure(String message, Exception e) {
				System.out.println(String.format("Authentication failure due to [%s], exception was [%s]", message, e));
			}

			@Override
			public void onSubscriptionSucceeded(String arg0) {
				System.out.println("Succeed.");
			}

			@Override
			public void onEvent(String arg0, String arg1, String arg2) {
				System.out.println(arg0 + arg1 + arg2);
			}
		});

		/*
		 * Watch for Event
		 */
		channel.bind(api_event, new PrivateChannelEventListener() {
			@Override
			public void onEvent(String channel, String event, String data) {
				System.out.println("Received event with data: " + data);
			}

			@Override
			public void onSubscriptionSucceeded(String arg0) {
			}

			@Override
			public void onAuthenticationFailure(String arg0, Exception arg1) {
			}
		});

		System.out.println(pusher.getConnection().getState().toString());

		/*
		 * Main Job
		 */
		while (true) {
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
			}
			/*
			 * ::: SEND MESSAGE :::
			 * 
			 * channel.trigger("client-test",
			 * "{\"name\": \"John\", \"message\": \"Hello\"}");
			 * System.out.println("Message sent.");
			 */
		}
	}

	@Override
	public void onEvent(String arg0, String arg1, String arg2) {
		System.out.println(arg0 + arg1 + arg2);
	}

	@Override
	public void onSubscriptionSucceeded(String arg0) {
		System.out.println(arg0);
	}

	@Override
	public void onConnectionStateChange(ConnectionStateChange arg0) {
		System.out.println(arg0.getCurrentState().toString());
	}

	@Override
	public void onError(String arg0, String arg1, Exception arg2) {
		System.out.println(arg0 + arg1 + arg2);
	}

	@Override
	public void onAuthenticationFailure(String arg0, Exception arg1) {
		System.out.println(arg0 + arg1);
	}

}